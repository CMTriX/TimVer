<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:TimVer.Converters"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <convert:TodayConverter x:Key="TodayConverter" />

    <!--#region Cell style-->
    <Style TargetType="DataGridCell"
           x:Key="DisplayOnly"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Focusable" Value="False" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesign.Brush.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell"
           x:Key="DisplayOnly2"
           BasedOn="{StaticResource {x:Type DataGridCell}}">
        <Setter Property="Focusable" Value="False" />
    </Style>
    <!--#endregion-->

    <!--#region Row styles-->
    <Style TargetType="DataGridRow"
           x:Key="DisplayOnlyRows"
           BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow"
           x:Key="HistoryRows"
           BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding HDate, Converter={StaticResource TodayConverter}}"
                         Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridRow"
           x:Key="LogicalDriveRows"
           BasedOn="{StaticResource {x:Type DataGridRow}}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Label}"
                         Value="Not Ready">
                <Setter Property="Foreground" Value="Gray" />
            </DataTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesign.Brush.Background}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region  Style to alight datagrid column headers right-->
    <Style TargetType="DataGridColumnHeader"
           x:Key="alignHeaderRight"
           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Right" />
    </Style>
    <!--#endregion-->

    <!--#region  Style to align datagrid column headers left-->
    <Style TargetType="DataGridColumnHeader"
           x:Key="alignHeaderLeft"
           BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="15,0,0,0" />
    </Style>
    <!--#endregion-->

    <!--#region  Style to alight text boxes in a datagrid right-->
    <Style TargetType="TextBlock"
           x:Key="alignRight"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>
    <!--#endregion-->

    <!--#region Style to alight text boxes in a datagrid center-->
    <Style TargetType="TextBlock"
           x:Key="alignCenter"
           BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <!--#endregion-->

</ResourceDictionary>